/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function fetch(method: string, url: string, headers: ([string, string])[], data: number[] | null, connectTimeout: number | null, maxRedirections: number | null) {
    return invoke()<number>("fetch", { method,url,headers,data,connectTimeout,maxRedirections })
}

export function fetchCancel(rid: number) {
    return invoke()<null>("fetch_cancel", { rid })
}

export function fetchSend(rid: number) {
    return invoke()<FetchResponse>("fetch_send", { rid })
}

export function fetchReadBody(rid: number) {
    return invoke()<number[]>("fetch_read_body", { rid })
}

export type FetchResponse = { status: number; statusText: string; headers: ([string, string])[]; url: string }
