import { createEnum, createStruct } from "@macrograph/runtime";
import { EnumVariant, EnumVariants, t } from "@macrograph/typesystem";

export const ResourceTypesArr = [
  "device",
  "bridge_home",
  "room",
  "zone",
  "light",
  "button",
  "relative_rotary",
  "temperature",
  "light_level",
  "motion",
  "entertainment",
  "grouped_light",
  "device_power",
  "device_update",
  "ip_connectivity",
  "zigbee_bridge_connectivity",
  "zigbee_connectivity",
  "zgp_connectivity",
  "remote_access",
  "bridge",
  "device_discovery",
  "system_update",
  "scene",
  "smart_scene",
  "entertainment_configuration",
  "public_image",
  "auth_v1",
  "behavior_script",
  "behavior_instance",
  "geofence",
  "geofence_client",
  "depender",
  "homekit",
  "matter",
  "matter_fabric",
  "contact",
  "tamper",
  "camera_motion",
  "unknown",
] as const;

export const ResourceTypes = createEnum(
  "Resource Types",
  (e) =>
    ResourceTypesArr.map((val) => e.variant(val)) as [
      EnumVariant<(typeof ResourceTypesArr)[number], null>
    ]
);

// export const ResourceTypes = createEnum("Resource Types", (e) => [
//   e.variant("device"),
//   e.variant("bridge_home"),
//   e.variant("room"),
//   e.variant("zone"),
//   e.variant("light"),
//   e.variant("button"),
//   e.variant("relative_rotary"),
//   e.variant("temperature"),
//   e.variant("light_level"),
//   e.variant("motion"),
//   e.variant("entertainment"),
//   e.variant("grouped_light"),
//   e.variant("device_power"),
//   e.variant("device_update"),
//   e.variant("ip_connectivity"),
//   e.variant("zigbee_bridge_connectivity"),
//   e.variant("zigbee_connectivity"),
//   e.variant("zgp_connectivity"),
//   e.variant("remote_access"),
//   e.variant("bridge"),
//   e.variant("device_discovery"),
//   e.variant("system_update"),
//   e.variant("scene"),
//   e.variant("smart_scene"),
//   e.variant("entertainment_configuration"),
//   e.variant("public_image"),
//   e.variant("auth_v1"),
//   e.variant("behavior_script"),
//   e.variant("behavior_instance"),
//   e.variant("geofence"),
//   e.variant("geofence_client"),
//   e.variant("depender"),
//   e.variant("homekit"),
//   e.variant("matter"),
//   e.variant("matter_fabric"),
//   e.variant("contact"),
//   e.variant("tamper"),
//   e.variant("camera_motion"),
//   e.variant("unknown"),
// ]);

export const ResourceIdentifier = createStruct("Resource Identifier", (s) => ({
  rid: s.field("rid", t.string()),
  rtype: s.field("Resource Type", t.enum(ResourceTypes)),
}));
