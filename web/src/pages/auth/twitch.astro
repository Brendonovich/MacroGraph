---
export const prerender = false;

import { z } from "zod";

export const STATE = z.object({
	port: z.number(),
	redirect_uri: z.string(),
});

export const TOKEN = z.object({
	access_token: z.string(),
	expires_in: z.number(),
	refresh_token: z.string(),
	token_type: z.string(),
	scope: z.array(z.string()),
});

export const PARAMS = z.object({
	code: z.string(),
	// state: z
	//   .string()
	//   .transform((s) => STATE.parse(JSON.parse(decodeURIComponent(s)))),
});

const { searchParams } = Astro.url;

const params = PARAMS.parse({
	code: searchParams.get("code"),
});

const res = await fetch(`https://id.twitch.tv/oauth2/token`, {
	method: "POST",
	body: new URLSearchParams({
		client_id: import.meta.env.TWITCH_CLIENT_ID,
		client_secret: import.meta.env.TWITCH_CLIENT_SECRET,
		code: params.code,
		grant_type: "authorization_code",
		redirect_uri: Astro.url.origin + Astro.url.pathname,
	}),
});

const json = await res.json();

const token = TOKEN.parse(json);
---

<script define:vars={{ token }}>
	/** @type Window */
	const opener = window.opener;

	opener.postMessage(token);

	window.close();
</script>
